{"ast":null,"code":"var _jsxFileName = \"D:\\\\omar samir\\\\Redux Priects\\\\muslum\\\\src\\\\components\\\\AzkarContainer\\\\AzkarContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './AzkarContainer.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AzkarContainer() {\n  _s();\n  const [azkarcontainer, setAzkarcontainer] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`https://raw.githubusercontent.com/nawafalqari/azkar-api/56df51279ab6eb86dc2f6202c7de26c8948331c1/azkar.json`);\n        console.log(response.data);\n        setAzkarcontainer(response.data);\n      } catch (error) {\n        console.error(\"Error fetching Quran details:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // دالة لتنظيف النصوص\n  const cleanText = text => {\n    if (!text || text === \"stop\") return ''; // إذا كانت القيمة غير موجودة أو \"stop\"، قم بإرجاع نص فارغ\n    return text.replace(/\\\\n/g, '') // إزالة السطور الجديدة\n    .replace(/['\"]/g, '') // إزالة علامات التنصيص المفردة والمزدوجة\n    .replace(/,(\\s*,)+/g, ',') // إزالة الفواصل المكررة\n    .trim(); // إزالة المسافات الزائدة\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AzkarContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0643\\u0644 \\u0627\\u0644\\u0623\\u0630\\u0643\\u0627\\u0631\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"azkar-sections\",\n      children: Object.keys(azkarcontainer).map(sectionKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"azkar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: sectionKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"azkar-list\",\n          children: azkarcontainer[sectionKey].filter(azkar => cleanText(azkar.content) !== '') // تصفية العناصر الفارغة و \"stop\"\n          .map((azkar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"azkar-item\",\n            children: cleanText(azkar.content)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, sectionKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(AzkarContainer, \"pEtK7fw6IKukSdf8yxsT3hZbwvs=\");\n_c = AzkarContainer;\nexport default AzkarContainer;\nvar _c;\n$RefreshReg$(_c, \"AzkarContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AzkarContainer","_s","azkarcontainer","setAzkarcontainer","fetchData","response","get","console","log","data","error","cleanText","text","replace","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","sectionKey","filter","azkar","content","index","_c","$RefreshReg$"],"sources":["D:/omar samir/Redux Priects/muslum/src/components/AzkarContainer/AzkarContainer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './AzkarContainer.css';\r\nimport axios from \"axios\";\r\n\r\nfunction AzkarContainer() {\r\n    const [azkarcontainer, setAzkarcontainer] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://raw.githubusercontent.com/nawafalqari/azkar-api/56df51279ab6eb86dc2f6202c7de26c8948331c1/azkar.json`\r\n                );\r\n                console.log(response.data);\r\n                setAzkarcontainer(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching Quran details:\", error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // دالة لتنظيف النصوص\r\n    const cleanText = (text) => {\r\n        if (!text || text === \"stop\") return ''; // إذا كانت القيمة غير موجودة أو \"stop\"، قم بإرجاع نص فارغ\r\n        return text\r\n            .replace(/\\\\n/g, '') // إزالة السطور الجديدة\r\n            .replace(/['\"]/g, '') // إزالة علامات التنصيص المفردة والمزدوجة\r\n            .replace(/,(\\s*,)+/g, ',') // إزالة الفواصل المكررة\r\n            .trim(); // إزالة المسافات الزائدة\r\n    };\r\n\r\n    return (\r\n        <div className=\"AzkarContainer\">\r\n            <h2>كل الأذكار</h2>\r\n            <div className=\"azkar-sections\">\r\n                {Object.keys(azkarcontainer).map((sectionKey) => (\r\n                    <div key={sectionKey} className=\"azkar-section\">\r\n                        <h3>{sectionKey}</h3>\r\n                        <div className=\"azkar-list\">\r\n                            {azkarcontainer[sectionKey]\r\n                                .filter((azkar) => cleanText(azkar.content) !== '') // تصفية العناصر الفارغة و \"stop\"\r\n                                .map((azkar, index) => (\r\n                                    <div key={index} className=\"azkar-item\">\r\n                                        {cleanText(azkar.content)}\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AzkarContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}